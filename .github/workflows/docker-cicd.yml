name: Docker CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'services/order-management/**'
      - 'shared/**'

env:
  REGISTRY: jewelryshopacr01280.azurecr.io
  
jobs:
  docker-build-deploy:
    runs-on: ubuntu-latest
    # Always run for Order Management changes
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Login to Azure Container Registry
        run: az acr login --name jewelryshopacr01280
          
      - name: Build Shared Library
        run: |
          cd shared
          npm install
          npm run build
          
      - name: Build and Push Docker Image
        run: |
          cd services/order-management
          
          # Build image (Docker handles npm install internally)
          docker build -t $REGISTRY/order-management:${{ github.sha }} .
          docker build -t $REGISTRY/order-management:latest .
          
          # Push images
          docker push $REGISTRY/order-management:${{ github.sha }}
          docker push $REGISTRY/order-management:latest
          
      - name: Deploy to Azure VM
        run: |
          # Create SSH key file
          echo "${{ secrets.AZURE_VM_SSH_KEY }}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          
          # Deploy via SSH
          ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no azureuser@4.236.132.147 << 'EOF'
            cd ~/jewelry-shop
            
            # Login to ACR
            az acr login --name jewelryshopacr01280
            
            # Pull latest image
            docker pull jewelryshopacr01280.azurecr.io/order-management:latest
            
            # Update and restart service
            docker-compose down order-management
            docker-compose up -d order-management
            
            # Wait and test
            sleep 15
            curl -f http://localhost:3004/health || exit 1
            
            echo "âœ… Order Management v2.0 deployed successfully!"
          EOF
          
      - name: Cleanup
        if: always()
        run: rm -f /tmp/ssh_key