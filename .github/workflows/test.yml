name: 🧪 Test & Quality Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

jobs:
  test:
    name: 🧪 Test Services
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [user-management, pricing-service, inventory-management]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install root dependencies
      run: npm ci
        
    - name: 🏗️ Build shared library
      run: |
        cd shared
        npm ci
        npm run build
        
    - name: 🔧 Install service dependencies
      run: |
        cd services/${{ matrix.service }}
        npm ci
        
    - name: 🏗️ Build service
      run: |
        cd services/${{ matrix.service }}
        npm run build
        
    - name: 🧪 Run tests
      run: |
        cd services/${{ matrix.service }}
        npm test || echo "No tests configured for ${{ matrix.service }}"
        
    - name: 🔍 Type checking
      run: |
        cd services/${{ matrix.service }}
        npm run typecheck
        
    - name: 🔍 Lint code
      run: |
        cd services/${{ matrix.service }}
        npm run lint || echo "No linting configured for ${{ matrix.service }}"

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔒 Run security audit
      run: |
        npm audit --audit-level moderate
        cd shared && npm audit --audit-level moderate
        cd ../services/user-management && npm audit --audit-level moderate
        cd ../pricing-service && npm audit --audit-level moderate
        cd ../inventory-management && npm audit --audit-level moderate

  docker-build:
    name: 🐳 Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐳 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🏗️ Build shared library image
      run: |
        cd shared
        docker build -t shared:test .
        
    - name: 🏗️ Test build user-management
      run: |
        cd services/user-management
        docker build --build-arg SHARED_IMAGE=shared:test -t user-management:test .
        
    - name: 🏗️ Test build pricing-service
      run: |
        cd services/pricing-service
        docker build --build-arg SHARED_IMAGE=shared:test -t pricing-service:test .

  frontend-test:
    name: 🎨 Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: 🔍 Type checking
      run: |
        cd frontend
        npm run typecheck
        
    - name: 🔍 Lint frontend
      run: |
        cd frontend
        npm run lint
        
    - name: 🏗️ Build frontend
      run: |
        cd frontend
        npm run build