#!/usr/bin/env node\n\n/**\n * Gold Rate Fetcher Script\n * Fetches current gold rates from external APIs for testing\n */\n\nconst axios = require('axios');\n\nasync function fetchGoldRates() {\n  console.log('Fetching current gold rates...');\n  \n  try {\n    // Mock gold rate fetching (replace with real API)\n    const mockRates = {\n      gold: {\n        rate_per_gram: Math.floor(Math.random() * 1000) + 6000, // Random between 6000-7000\n        rate_per_tola: Math.floor(Math.random() * 12000) + 70000, // Random tola rate\n        source: 'Mock API',\n        timestamp: new Date().toISOString()\n      },\n      silver: {\n        rate_per_gram: Math.floor(Math.random() * 20) + 80, // Random between 80-100\n        source: 'Mock API',\n        timestamp: new Date().toISOString()\n      },\n      platinum: {\n        rate_per_gram: Math.floor(Math.random() * 500) + 3000, // Random between 3000-3500\n        source: 'Mock API',\n        timestamp: new Date().toISOString()\n      }\n    };\n    \n    console.log('Current Rates:');\n    console.log('=============');\n    console.log(`Gold: ₹${mockRates.gold.rate_per_gram}/gram`);\n    console.log(`Silver: ₹${mockRates.silver.rate_per_gram}/gram`);\n    console.log(`Platinum: ₹${mockRates.platinum.rate_per_gram}/gram`);\n    console.log(`Last Updated: ${mockRates.gold.timestamp}`);\n    \n    // If pricing service is running, update the rates\n    try {\n      const response = await axios.post('http://localhost:3003/api/gold-rates/update', mockRates, {\n        timeout: 5000\n      });\n      console.log('✅ Rates updated in pricing service');\n    } catch (error) {\n      console.log('⚠️  Pricing service not available - rates not updated');\n    }\n    \n  } catch (error) {\n    console.error('❌ Error fetching gold rates:', error.message);\n  }\n}\n\nif (require.main === module) {\n  fetchGoldRates();\n}\n\nmodule.exports = { fetchGoldRates };